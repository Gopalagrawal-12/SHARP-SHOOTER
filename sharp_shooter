import pygame
pygame.init()
w_width = 800
w_height = 600
screen=pygame.display.set_mode((w_width,w_height))
screen.fill((255,255,255))
pygame.display.set_caption("Frame")
def draw_game_in_loop():
    screen.blit(bg, (0, 0))
    clock.tick(50)
    text=font.render("Score : "+str(score),1,"red")
    soldier.draw(screen)
    enemy.draw(screen)
    screen.blit(text,(0,10))
    for bullet in bullets:
        bullet.draw_circle(screen)
    pygame.display.flip()
class Player():
    def __init__(self,x,y,width,height):
        self.x=x
        self.y=y
        self.width=width
        self.height=height
        self.vel=5
        self.is_jump=False
        self.jump_count=10
        # CHARACTERS:
        self.left=False
        self.right=False
        self.walk_count=0
        self.standing=True
        self.box=(self.x,self.y,self.width,self.height)
        self.hit=pygame.Rect(self.box)
    def draw(self,screen):
        if self.walk_count + 1 >= 27:
            self.walk_count = 0
        if (not self.standing):
            if self.left:
                screen.blit(left_walk[self.walk_count // 3], (self.x, self.y))
                self.walk_count += 1
            elif self.right:
                screen.blit(right_walk[self.walk_count // 3], (self.x, self.y))
                self.walk_count += 1
        else:
            if self.right:
                screen.blit(right_walk[0], (self.x, self.y))
            else:
                screen.blit(left_walk[0], (self.x, self.y))
        self.box = (self.x, self.y, self.width, self.height)
        self.hit = pygame.Rect(self.box)
    def touch(self):
        self.x=0
        self.y=390
        self.is_jump=False
        self.jump_count=10      
class Projectile():
    def __init__(self,x,y,radius,color,direction):
        self.x=x
        self.y=y
        self.radius=radius
        self.color=color
        self.direction=direction
        self.vel=direction*8
    def draw_circle(self,screen):
        pygame.draw.circle(screen,self.color,(self.x,self.y),self.radius)
class enemy():
    def __init__(self,x,y,width,height,end):
        self.x=x
        self.y=y
        self.width=width
        self.height=height
        self.path=[x,end]
        self.walk_count=0
        self.vel=3
        self.box = (self.x+20, self.y, self.width-40, self.height-4)
        self.hit = pygame.Rect(self.box)
        self.health=9
        self.visible=True
    def draw(self,screen):
        self.move()
        if self.visible:
            if self.walk_count + 1 >= 27:
                self.walk_count = 0
            if self.vel>0:
                screen.blit(move_right[self.walk_count // 3], (self.x, self.y))
                self.walk_count += 1
            else:
                screen.blit(move_left[self.walk_count // 3], (self.x, self.y))
                self.walk_count += 1
            self.box = (self.x+20, self.y, self.width-40, self.height-4)
            self.hit = pygame.Rect(self.box)
            pygame.draw.rect(screen ,"grey",(self.box[0],self.box[1]+3,50,10),0)
            pygame.draw.rect(screen,"green",(self.box[0],self.box[1]+3,50-(5.5 +(9-self.health)),10),0)
    def move(self):
        if self.vel>0:
            if self.x<self.path[1]-self.width+20:
                self.x+=self.vel
            else:
                self.vel=self.vel*-1
                self.x+=self.vel
                self.walk_count=0
        else:
            if self.x>self.path[0] -20 :
                self.x+=self.vel
            else:
                self.vel = self.vel * -1
                self.x += self.vel
                self.walk_count = 0
    def touch(self):
        hit_sound.play()
        if self.health>0:
            self.health-=1
        else:
            self.visible=False
done =False
clock=pygame.time.Clock()
bg=pygame.image.load("bg.jpg")
bg=pygame.transform.scale(bg,(w_width,w_height))
right_walk=[pygame.image.load(f"Soldier/{i}.png") for i in range(1,10)]
left_walk=[pygame.image.load(f"Soldier/L{i}.png") for i in range(1,10)]
stand=pygame.image.load("Soldier/standing.png")
soldier=Player(23,390,60,60)
enemy=enemy(100,390,60,60,w_width)
move_left=[pygame.image.load(f"enemy/L{i}.png") for i in range(1,10)]
move_right=[pygame.image.load(f"enemy/R{i}.png") for i in range(1,10)]
bullet_sound=pygame.mixer.Sound("sounds/Bulletsound.mp3")
hit_sound=pygame.mixer.Sound("sounds/Hit.mp3")
music=pygame.mixer.music.load("sounds/music.mp3")
pygame.mixer.music.play(-1)
pygame.mixer.music.set_volume(0.7)
bullets=[]
score=0
shoot=0
font=pygame.font.SysFont("helvetica",30,1,1)
while not done:
    for event in pygame.event.get():
        if event.type==pygame.QUIT:
             done=True
    if enemy.visible:
        if soldier.hit.colliderect(enemy.hit):
            enemy.vel=enemy.vel * -1
            soldier.touch()
    for bullet in bullets:
        if enemy.visible:
            if bullet.y - bullet.radius<enemy.box[1]+enemy.box[3] and bullet.y+bullet.radius>enemy.box[1]:
                if bullet.x+bullet.radius>enemy.box[0] and bullet.x-bullet.radius<enemy.box[0]+enemy.box[2]:
                    bullets.pop(bullets.index(bullet))
                    score+=1
                    enemy.touch()
        if bullet.x<800 and bullet.x>0:
            bullet.x+=bullet.vel
        else:
            bullets.pop(bullets.index(bullet))
    if shoot>0:
        shoot+=1
    if shoot >3:
        shoot=0
    keys=pygame.key.get_pressed()
    if keys[pygame.K_SPACE] and shoot==0:
        bullet_sound.play()
        if soldier.right:
            direction=1
        else:
            direction=-1
        if len(bullets)<5:
            bullets.append(Projectile(soldier.x+soldier.width//2,soldier.y+soldier.height//2,7,"black",direction))
            shoot =1
    if keys[pygame.K_LEFT] and soldier.x>0:
        soldier.x-=soldier.vel
        soldier.left=True
        soldier.right=False
        soldier.standing=False
    elif keys[pygame.K_RIGHT] and soldier.x<w_width-soldier.width:
        soldier.x+=soldier.vel
        soldier.left=False
        soldier.right=True
        soldier.standing=False
    else:
        soldier.standing=True
        soldier.walk_count=0

    if (not soldier.is_jump):
        if keys[pygame.K_UP]:
            soldier.is_jump=True
    else:
        if soldier.is_jump:
            if soldier.jump_count>=-10:
                neg=1
                if soldier.jump_count<0:
                    neg=-1
                soldier.y-=(soldier.jump_count**2)*neg*0.5
                soldier.jump_count-=1
            else:
                soldier.jump_count=10
                soldier.is_jump=False
    draw_game_in_loop()
